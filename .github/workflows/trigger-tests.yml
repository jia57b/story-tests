name: Trigger Tests 12

on:
  pull_request:
    types: [closed, opened, synchronize, reopened]

jobs:
  trigger-l1-tests:
    # only run when PR is merged
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: get the PR base branch
        id: base_branch
        run: |
          echo "${{ github.base_ref }}"
          echo "::set-output name=branch::$(echo ${{ github.base_ref }} | cut -d'/' -f3)"
          # story_version: '${{ steps.base_branch.outputs.branch }}'


      - name: Trigger Tests
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: pr-trigger-tests.yml
          repo: jia57b/l1-tests
          inputs: '{ "devnet_version": "${{ needs.Setup-Env.outputs.devnet_repo }}", "deploy_report": "false" }'
          # Required when using the `repo` option. Either a PAT or a token generated from the GitHub app or CLI
          token: "${{ secrets.PAT_FOR_WORKFLOW_DISPATCH }}"

      # - name: Trigger Tests
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.PAT_FOR_WORKFLOW_DISPATCH }}
      #     script: |
      #       try {
      #         const response = await github.rest.repos.createDispatchEvent({
      #           owner: 'jia57b',
      #           repo: 'l1-tests',
      #           event_type: 'run-tests',
      #           client_payload: {
      #             devnet_version: '${{ needs.Setup-Env.outputs.devnet_repo }}',
      #             deploy_report: true
      #           }
      #         });
      #         console.log(response);
      #       } catch (error) {
      #         console.error('Error:', error);
      #       }

      # - name: Trigger test nodes
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.PAT_FOR_WORKFLOW_DISPATCH }}
      #     script: |
      #       try {
      #         const response = await github.rest.repos.createDispatchEvent({
      #           owner: 'jia57b',
      #           repo: 'test-node-launcher',
      #           event_type: 'start-test-nodes',
      #           client_payload: {
      #             story_version: '${{ steps.base_branch.outputs.branch }}',
      #             trigger_tests: 'false'
      #           }
      #         });
      #         console.log(response);
      #       } catch (error) {
      #         console.error('Error:', error);
      #       }